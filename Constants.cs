using System.Collections.Generic;
using System.Configuration;
using System.Data;
using System.Text;
using System.Text.RegularExpressions;
namespace MobileCompanyConstance
{
    class Constance
    {
        public string connectionStr = "";
        //public string insertSqlQuery = "INSERT INTO [dbo].[TotalData] (Item_Id, Name, Descripton, Color) VALUES (@Item_Id, @Name, @Descripton, @Color)";
        public string truncateSqlQuery = "TRUNCATE TABLE [dbo].[TotalData]";
        public string truncateItemQuery = "[mobile].[TruncateItem]";
        public string truncateSalesQuery = "[mobile].[TruncateSales]";
        public string truncateCustomerQuery = "[mobile].[TruncateCustomer]";
        public string truncateCountryQuery = "[mobile].[TruncateCountry]";
        public string mainQuery = "[mobile].[getData]";
        public string itemSqlQuery = "[mobile].[InsertItem]";
        public string salesSqlQuery = "[mobile].[InsertSale]";
        public string customerSqlQuery ="[mobile].[InsertCustomer]";
        public string countrySqlQuery ="[mobile].[InsertCountry]";
        public string Item_id = "@Item_Id";
        public string Name = "@Name";
        public string Descripton = "@Descripton";
        public string Color = "@Color";
        public string Price = "@Price";
        public string Country_Id = "@Country_Id";
        public string RAM = "@RAM";
        public string ROM = "@ROM";
        public string Weight = "@Weight";
        public string OS = "@OS";
        public string Battery = "@Battery";
        public string Camera = "@Camera";
        public string Dimension = "@Dimension";
        public string Customer_Id = "@Customer_Id";
        public string Payment_Type = "@Payment_Type";
        public string Purchase_Type = "@Purchase_Type";
        public string Sales_quantity = "@Sales_quantity";
        public string Customer_Name = "@Customer_Name";
        public string Gender = "@Gender";
        public string Age = "@Age";
        public string Address = "@Address";
        public string Country_Name = "@Country_Name";
        public string Purchase_Date = "@Purchase_Date";
        public string priceValidationMessage = "Price field must have a positive value.";
        public string emptyDataValidationMessage = "Empty data!";
        public string ramValidationMessage = "RAM can have only the values 2,4, 8, 16, 32.";
        public string romValidationMessage = "ROM can have only the values 16,32, 64, 128, 256.";
        public string batteryValidationMessage = "Battery capacity should be between 2000 and 10000.";
        public string weightValidationMessage = "Weight must be between 100 and 500 grams.";
        public string quantityValidationMessage = "Sales quantity field must have a positive value.";
        public string nameValidationMessage = "Name field can have only strings and numbers and maximum allowed length is 25.";
        public string descriptionValidationMessage = "Description field exceds the maximum allowed length.";
        public string colorValidationMessage = "Color field can have only the colors Black, Red, Blue, Yellow, White, Green.";
        public string osValidationMessage = "OS field can have only the values Android, IOS.";
        public string cameraValidationMessage = "Invalid Pixel format.";
        public string dimensionValidationMessage = "Dimension should be in the format nnnn*nnn.";
        public string countryValidationMessage = "Country Name field can have only country India, Russia, America, Japan, Taiwan and Korea";
        public string customerValidationMessage = "Customer Name field can have only letters and maximum allowed length is 20";
        public string genderValidationMessage = "Gender field can have only genders Male, Female and Other";
        public string addressValidationMessage = "Address field exceds the maximum allowed length.";
        public string paymentValidationMessage = "Payment Type field can have only values Cash, UPI, Net Banking, Cheque";
        public string purchaseValidationMessage = "Purchase Type field can have only values Wholesales and Retails";
        public string customerIdValidationMessage = "Custermer Id should be in the format Name_digits and allowed capacity is 25 characters.";
        public string countryMissmatchValidationMessage = "Mismatch in Country Id and Name";
        public string itemIdValidationMessage = "Item Id can not be Empty.";
        public string dateIdValidationMessage = "Invalid date format";
        public string country1 = "America";
        public string country2 = "India";
        public string country3 = "Japan";
        public string country4 = "Korea";
        public string country5 = "Russia";
        public string country6 = "Taiwan";
        public string dateFormat = "dd-MM-yyyy";
        public string emptyString = " ";
        public List<int> ramList = new List<int>() { 2,4, 8, 16, 32 };
        public List<int> romList = new List<int>() { 16,32, 64, 128, 256 };
        public List<string> colorList = new List<string>() { "Black", "Red", "Blue", "Yellow", "White", "Green" };
        public List<string> osList = new List<string>() { "Android", "IOS" };
        public List<string> countryList = new List<string>() { "India", "America", "Russia", "Japan", "Taiwan", "Korea" };
        public List<string> genderList = new List<string>() { "Male", "Female", "Other" };
        public List<string> paymentList = new List<string>() { "Cash", "Net Banking", "UPI", "Cheque" };
        public List<string> purchaseList = new List<string>() { "Wholesales", "Retails" };
        public StringBuilder errorMessages = new StringBuilder();
        public int totalPrice = 0;
        public string datePattern = @"^(0[1-9]|1[0-9]|2[0-9]|3[0-1])-(0[1-9]|1[0-2])-\d{4}$";
        public string nameString = @"(^[a-zA-Z][a-zA-Z0-9\s]+$)";
        public string cameraString = @"(^\d+$)";
        public string dimensionString = @"(^\d{4}\*\d{3}$)";
        public string customerString = @"(^[a-zA-Z][a-zA-Z.\s]*$)";
        public string customerIdString = @"(^[a-zA-Z]+_\d+$)";
        public string descriptionString = @"([!@#$%^&*(),.?:{ }|<>]/;*/$])";
        public string sqlConnectionString = ConfigurationManager.ConnectionStrings["sqlConnection"].ConnectionString;
    }
}